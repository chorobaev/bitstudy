{"version":3,"sources":["components/widgets/car.png","static/logo-big.png","services/history.js","routes/Route.js","components/widgets/texts.js","components/utils.js","components/widgets/buttons.js","components/menu/Menu.js","components/game/FinishDialog.js","components/game/Game.js","components/help/Help.js","components/about/About.js","routes/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","history","createBrowserHistory","RouteWrapper","Component","component","rest","isPrivate","defaultProps","Track","props","percentage","Math","round","way","className","Car","style","width","src","car","alt","Number","value","Timer","time","sec","min","floor","toString","length","formatSeconds","BitButton","onClick","text","bitColors","Byte","handleBitClick","index","console","log","newBits","state","bits","setState","byteArr","num","ans","byteToNum","byteIsNum","onSolved","Array","fill","onAction","this","forEach","bit","push","Bit","key","color","calcOn","React","backgroundColor","temp","reverse","pow","Menu","pathname","logo","handlePlay","handleHelp","handleAbout","Modal","setAppElement","customStyles","content","top","left","right","maxWidth","bottom","borderRadius","marginRight","transform","FinishDialog","timeText","isOpen","opened","onAfterOpen","onRequestClose","onClose","contentLabel","shouldCloseOnOverlayClick","randomByte","max","random","arrayOfRandomBytes","size","nums","i","unit","Game","startTimer","id","setInterval","isFinished","clearInterval","prevState","level","handleSolved","restart","problems","handleByteClick","completed","number","finished","Help","About","href","Routes","path","exact","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cb68b00d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/car.311692cf.png\";","module.exports = __webpack_public_path__ + \"static/media/logo-big.0babc352.png\";","import { createBrowserHistory } from 'history';\nconst history = createBrowserHistory();\n\nexport default history;","import React from \"react\";\nimport {Route} from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n\nexport default function RouteWrapper(\n    {\n        component: Component,\n        isPrivate,\n        ...rest\n    }\n) {\n\n    return <Route {...rest} component={Component}/>;\n}\n\nRouteWrapper.propTypes = {\n    isPrivate: PropTypes.bool,\n    component: PropTypes.oneOfType([PropTypes.element, PropTypes.func])\n        .isRequired,\n};\n\nRouteWrapper.defaultProps = {\n    isPrivate: false,\n};","import React from \"react\";\nimport \"./widgets.css\"\nimport car from \"./car.png\"\nimport {formatSeconds} from \"../utils\";\n\nexport function BitTitle(props) {\n    return (\n        <span>{props.text}</span>\n    )\n}\n\nexport function Track(props) {\n    let percentage = Math.round(props.percentage);\n    if (percentage < 0) percentage = 0;\n    if (percentage > 100) percentage = 100;\n\n    const way = percentage * 0.88 + 12;\n    return (\n        <div className=\"progress-track\">\n            <div className=\"track\">\n                <Car percentage={way}/>\n            </div>\n            <div className=\"progress-wrapper\">\n                <span className=\"progress\">{percentage}%</span>\n            </div>\n        </div>\n    )\n}\n\nfunction Car(props) {\n    return (\n        <div className=\"car-engine\" style={{width: `${props.percentage}%`}}>\n            <img className=\"car\" src={car} alt={\"car\"}/>\n        </div>\n    );\n}\n\nexport function Number(props) {\n    return (\n        <div className=\"number-wrapper\">\n            <span className=\"number\"> = {props.value}</span>\n        </div>\n    )\n}\n\nexport function Timer(props) {\n    const time = formatSeconds(props.time);\n    return (\n        <div className=\"timer-wrapper\">\n            <span className=\"timer\">{time}</span>\n        </div>\n    )\n\n}","export function formatSeconds(sec) {\n    let min = Math.floor(sec / 60);\n    sec %= 60;\n    let time = \"\";\n    time += min.toString().length < 2 ? `0${min}:` : `${min}:`;\n    time += sec.toString().length < 2 ? `0${sec}` : sec.toString();\n    return time;\n}","import React from 'react';\nimport './widgets.css'\nimport {Number} from \"./texts\";\n\nexport function BitButton(props) {\n    return (\n        <button className='three-d' onClick={props.onClick}>{props.text}</button>\n    )\n}\n\nconst bitColors = [\"#de3f2e\", \"#008aca\", \"#c3b82c\", \"#e95d24\", \"#fbbc33\", \"#de3f2e\", \"#008aca\", \"#c3b82c\"];\n\nexport class Byte extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            bits: new Array(8).fill(0),\n        }\n    }\n\n    handleBitClick = index => {\n        console.log(index);\n        const newBits = this.state.bits;\n        newBits[index] = newBits[index] === 0 ? 1 : 0;\n        this.setState({bits: newBits});\n        if (byteIsNum(this.state.bits, this.props.value)) {\n            this.props.onSolved();\n            this.setState({bits: new Array(8).fill(0)})\n        }\n        this.props.onAction();\n    };\n\n    render() {\n        const bits = [];\n        this.state.bits.forEach((bit, index) => {\n            bits.push(\n                <Bit key={index} value={bit} onClick={() => this.handleBitClick(index)} color={bitColors[index]}/>\n            )\n        });\n        const num = this.props.calcOn ? byteToNum(this.state.bits) : this.props.value;\n        return (\n            <div className=\"byte\">\n                {bits}\n                <Number value={num}/>\n            </div>\n        )\n    }\n}\n\nfunction Bit(props) {\n    return (\n        <button className=\"bit\" onClick={props.onClick} style={{backgroundColor: props.color}}>{props.value}</button>\n    )\n}\n\nfunction byteIsNum(byteArr, num) {\n    const ans =byteToNum(byteArr);\n    console.log(`Actual num: ${num},  From bytes: ${ans}`);\n    return num === ans;\n}\n\nfunction byteToNum(byteArr) {\n    const temp = [...byteArr];\n    let ans = 0;\n    temp.reverse().forEach((value, index) => {\n        ans += value * Math.pow(2, index);\n    });\n    return ans;\n}","import React from 'react';\nimport logo from '../../static/logo-big.png';\nimport {BitButton} from \"../widgets/buttons\";\nimport history from \"../../services/history\";\nimport \"../shared.css\";\nimport './Menu.css';\n\nclass Menu extends React.Component {\n\n    handlePlay() {\n        history.push({\n            pathname: \"/game\",\n            state: {}\n        })\n    }\n\n    handleHelp() {\n        history.push(\"/help\")\n    }\n\n    handleAbout() {\n        history.push(\"/about\")\n    }\n\n    render() {\n        return (\n            <header className=\"main\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n                <BitButton onClick={this.handlePlay} text='Play'/>\n                <div className=\"separator-margin\"/>\n                <BitButton onClick={this.handleHelp} text='Help'/>\n                <div className=\"separator-margin\"/>\n                <BitButton onClick={this.handleAbout} text='About'/>\n            </header>\n        );\n    }\n}\n\nexport default Menu;\n","import React from \"react\";\nimport Modal from \"react-modal\";\n\nModal.setAppElement('#root');\n\nconst customStyles = {\n    content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        width: '70%',\n        maxWidth: '400px',\n        bottom: 'auto',\n        backgroundColor: '#282c34',\n        borderRadius: '16px',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)'\n    }\n};\n\nexport default function FinishDialog(props) {\n    const time = props.time;\n    const min = Math.floor(time / 60);\n    const sec = time % 60;\n    const timeText = `${min !== 0 ? `${min} minutes and ` : \"\"}${sec} seconds`;\n\n    function afterOpenModal() {\n    }\n\n    function restart() {\n        props.onClose()\n    }\n\n    return (\n        <Modal\n            isOpen={props.opened}\n            onAfterOpen={afterOpenModal}\n            onRequestClose={props.onClose}\n            style={customStyles}\n            contentLabel=\"Finished Dialog\"\n            shouldCloseOnOverlayClick={false}\n        >\n            <div className=\"dialog\">\n                <div>\n                    <div className=\"dialog\">\n                        <h2 className=\"white\">You won!</h2>\n                    </div>\n                    <p className=\"white\">Your time penalty is {timeText}.</p>\n                    <div className=\"dialog-content\">\n                        <button className=\"btn-restart\" onClick={restart}>Restart</button>\n                    </div>\n                </div>\n            </div>\n        </Modal>\n    );\n}","import React from \"react\";\n\nimport {Timer, Track} from \"../widgets/texts\";\nimport {Byte} from \"../widgets/buttons\";\nimport FinishDialog from \"./FinishDialog\";\n\nimport \"./Game.css\";\nimport logo from \"../../static/logo-big.png\";\n\nconst randomByte = (min, max) => Math.floor(Math.random() * (max - min)) + min;\n\nconst arrayOfRandomBytes = size => {\n    const nums = [];\n    for (let i = 0; i < size; i++) {\n        const unit = Math.floor(255 / size);\n        const rem = 255 % size;\n        const min = i * unit;\n        const max = (i + 1) * unit + rem;\n        nums.push(randomByte(min, max));\n    }\n    return nums;\n};\n\nconst size = 10;\n\nclass Game extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            time: 0,\n            size: size,\n            level: 0,\n            problems: arrayOfRandomBytes(size)\n        };\n    }\n\n    componentDidMount() {\n        this.restart();\n    }\n\n    startTimer = () => {\n        const id = setInterval(() => {\n            if (this.isFinished()) {\n                clearInterval(id);\n                return;\n            }\n\n            this.setState(prevState => ({time: prevState.time + 1}));\n        }, 1000);\n    };\n\n    isFinished = () => this.state.level >= this.state.size;\n\n    handleSolved = () => {\n        this.setState(prevState => ({level: prevState.level + 1}));\n    };\n\n    restart = () => {\n        this.setState({\n            time: 0,\n            level: 0,\n            problems: arrayOfRandomBytes(this.state.size)\n        });\n    };\n\n    handleByteClick = () => {\n        if (this.state.time === 0) this.startTimer();\n    };\n\n    render() {\n        const completed = this.state.level * 100.0 / this.state.size;\n        const number = this.state.problems[this.state.level];\n        const finished = this.isFinished();\n        return (\n            <div className=\"main\">\n                <FinishDialog time={this.state.time}\n                              opened={finished}\n                              onClose={this.restart}/>\n                <div>\n                    <Timer time={this.state.time}/>\n                    <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n                </div>\n                <div className=\"game\">\n                    <Track percentage={completed}/>\n                    <div className=\"separator\"/>\n                    <div className=\"controller\">\n                        <Byte value={number}\n                              onSolved={this.handleSolved}\n                              onAction={this.handleByteClick}\n                              calcOn={finished}/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Game","import React from \"react\";\nimport logo from \"../../static/logo-big.png\";\n\nexport default function Help() {\n    return (\n        <div className=\"main\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n            <h3 className=\"title\">Help</h3>\n            <div className=\"content\">\n                <p>\n                    Tha aim of this game is to equalize a given bite in binary number system\n                    to a decimal number that is on the right side of the equality sign.\n                </p>\n                <p>\n                    In order to win, you have to solve 10 problems step by step.\n                    Given problems will get harder as you solve a problem.\n                </p>\n                <p>\n                    An indicator of your success is the timer which determines your problem\n                    solving speed.\n                </p>\n            </div>\n        </div>\n    );\n}","import React from \"react\";\nimport logo from \"../../static/logo-big.png\";\n\nexport default function About(props) {\n\n    return (\n        <div className=\"main\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n            <h3 className=\"title\">About</h3>\n            <div className=\"content\">\n                <p>\n                    This game was created to heps students who are new in binary world.\n                </p>\n                <p>\n                    Bit Study is steel being developed.\n                </p>\n                <p>\n                    If you have any suggestions you can reach me at\n                    <a href=\"https://gmail.com\" style={{color: \"white\"}}> chorobaev.nurbol@gmail.com</a>\n                </p>\n            </div>\n        </div>\n    );\n}","import React from \"react\";\nimport {Switch} from \"react-router-dom\";\nimport Route from \"./Route\";\n\nimport Menu from \"../components/menu/Menu\";\nimport Game from \"../components/game/Game\";\nimport Help from \"../components/help/Help\";\nimport About from \"../components/about/About\";\n\nexport default function Routes() {\n\n    return (\n        <Switch>\n            <Route path=\"/\" exact component={Menu}/>\n            <Route path=\"/help\" component={Help}/>\n            <Route path=\"/game\" component={Game}/>\n            <Route path=\"/about\" component={About}/>\n\n            <Route component={Menu}/>\n        </Switch>\n    );\n}","import React from 'react';\nimport {Router} from 'react-router-dom';\nimport history from './services/history';\nimport Routes from './routes';\n\nimport \"./components/shared.css\"\n\nfunction App() {\n    return (\n        <Router history={history}>\n            <div className=\"App\">\n                <Routes/>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. Menu is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}